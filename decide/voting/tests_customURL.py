# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCrearvotacion():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_check_custom_url(self):
    self.driver.get("http://localhost:8000/admin/login/?next=/admin/")
    self.driver.set_window_size(642, 515)
    self.driver.find_element(By.ID, "id_username").click()
    self.driver.find_element(By.ID, "id_password").send_keys("gonzalo99")
    self.driver.find_element(By.ID, "id_username").send_keys("decide")
    self.driver.find_element(By.CSS_SELECTOR, ".submit-row > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".model-voting .addlink").click()
    self.driver.find_element(By.ID, "id_name").send_keys("test")
    self.driver.find_element(By.ID, "id_desc").click()
    self.driver.find_element(By.ID, "id_desc").send_keys("testSelenium")
    self.driver.find_element(By.ID, "id_question").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, "#add_id_question > img").click()
    self.vars["win4737"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win4737"])
    self.driver.find_element(By.ID, "id_desc").send_keys("testq")
    self.driver.find_element(By.ID, "id_options-0-option").click()
    self.driver.find_element(By.ID, "id_options-0-option").send_keys("1")
    self.driver.find_element(By.ID, "id_options-0-number").click()
    self.driver.find_element(By.ID, "id_options-0-number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-0-number").click()
    element = self.driver.find_element(By.ID, "id_options-0-number")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "id_options-1-option").click()
    self.driver.find_element(By.ID, "id_options-1-number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-1-number").click()
    self.driver.find_element(By.ID, "id_options-1-number").send_keys("2")
    self.driver.find_element(By.ID, "id_options-1-number").click()
    self.driver.find_element(By.ID, "id_options-1-option").send_keys("2")
    self.driver.find_element(By.ID, "id_options-2-option").click()
    self.driver.find_element(By.ID, "id_options-2-number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-2-number").click()
    self.driver.find_element(By.ID, "id_options-2-number").send_keys("2")
    self.driver.find_element(By.ID, "id_options-2-number").click()
    element = self.driver.find_element(By.ID, "id_options-2-number")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "id_options-2-number").send_keys("3")
    self.driver.find_element(By.ID, "id_options-2-number").click()
    self.driver.find_element(By.ID, "id_options-0-pref_number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-0-pref_number").click()
    self.driver.find_element(By.ID, "id_options-1-pref_number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-1-pref_number").click()
    self.driver.find_element(By.ID, "id_options-1-pref_number").send_keys("2")
    self.driver.find_element(By.ID, "id_options-1-pref_number").click()
    element = self.driver.find_element(By.ID, "id_options-1-pref_number")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "id_options-2-pref_number").send_keys("1")
    self.driver.find_element(By.ID, "id_options-2-pref_number").click()
    self.driver.find_element(By.ID, "id_options-2-pref_number").send_keys("2")
    self.driver.find_element(By.ID, "id_options-2-pref_number").click()
    self.driver.find_element(By.ID, "id_options-2-pref_number").send_keys("3")
    self.driver.find_element(By.ID, "id_options-2-pref_number").click()
    self.driver.find_element(By.ID, "id_options-2-option").send_keys("3")
    self.driver.find_element(By.NAME, "_save").click()
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.ID, "id_link").click()
    link="testselenium"
    self.driver.find_element(By.ID, "id_link").send_keys(link)
    self.driver.find_element(By.ID, "id_auths").click()
    self.driver.find_element(By.ID, "id_auths").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, "#add_id_auths > img").click()
    self.vars["win4715"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win4715"])
    self.driver.find_element(By.ID, "id_name").send_keys("auth")
    self.driver.find_element(By.ID, "id_url").click()
    self.driver.find_element(By.ID, "id_url").click()
    self.driver.find_element(By.ID, "id_url").send_keys("http://localhost:8000")
    self.driver.find_element(By.ID, "id_me").click()
    self.driver.find_element(By.NAME, "_save").click()
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.NAME, "_save").click()
    self.driver.find_element(By.NAME, "action").click()
    dropdown = self.driver.find_element(By.NAME, "action")
    dropdown.find_element(By.XPATH, "//option[. = 'Start']").click()
    self.driver.find_element(By.CSS_SELECTOR, "option:nth-child(3)").click()
    self.driver.find_element(By.NAME, "_selected_action").click()
    self.driver.find_element(By.NAME, "index").click()
    self.driver.get("http://localhost:8000/booth/url/"+link)
    self.assertEqual(response.status_code, 200)